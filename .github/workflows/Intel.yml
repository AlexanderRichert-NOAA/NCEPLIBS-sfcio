name: Intel
on:
  push:
    branches:
    - develop
  pull_request:
    branches:
    - develop

jobs:
  Intel:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        compilers: ["oneapi", "classic"]

    steps:

    - name: "Install Intel"
      uses: NOAA-EMC/ci-install-intel-toolkit@develop
      with:
        compiler-setup: ${{ matrix.compilers }}

    - name: checkout-pfunit
      uses: actions/checkout@v4
      with:
        repository: Goddard-Fortran-Ecosystem/pFUnit
        path: pfunit

    - name: cache-pfunit
      id: cache-pfunit
      uses: actions/cache@v4
      with:
        path: ~/pfunit
        key: pfunit-${{ runner.os }}-${{ matrix.compilers }}

    - name: build-pfunit
      if: steps.cache-pfunit.outputs.cache-hit != 'true'
      run: |
        cmake -S pfunit -B pfunit/build -DSKIP_MPI=YES -DSKIP_ESMF=YES -DSKIP_FHAMCREST=YES -DCMAKE_INSTALL_PREFIX=~/pfunit -DCMAKE_BUILD_TYPE=Release
        cmake --build pfunit/build --parallel 2 --verbose
        cmake --install pfunit/build

    - name: checkout
      uses: actions/checkout@v4
      with: 
        path: sfcio

    - name: build
      run: |
        cmake -S sfcio -B sfcio/build -DENABLE_TESTS=ON -DCMAKE_PREFIX_PATH="~/pfunit"
        cmake sfcio/build --parallel 2 --verbose
    
    - name: test
      run: ctest --test-dir sfcio/build --verbose
